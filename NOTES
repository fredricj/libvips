This branch adds chunked write for JXL save.

It uses the old write by default, but the `chunked` flag enables a new chunked
write path.

- we should removed the old sequential write once we're done
- need v0.11 at minimum (v0.9 does not demand data in small chunks)

## sequential write

- start sink_disc to generate scanlines, accumulate to a 2100 scanline
  buffer

- scanlines come into the BG writer

	- add to current write buffer

	- have min(page_height, 2100) scanlines?

- as soon as we have the next min(remaining page height, 2064) scanlines we
  can write another line of tiles

	- start a add_chunked_frame() bg thread running if we don't have one

	- raise sem tiles_available

	- block on sem tiles_written

	- is the frame complete? wait for sem frame_complete for the write to
	  finish

	- reset scanline buffer for the next set of scanlines

- add_chunked_frame() thread:

	- make the frame settings, set up stuff

	- call JxlEncoderAddChunkedFrame() and block

	- the call returns and the frame has been written

	- signal on sem frame_complete

	- return

- in data_at() we need to:

	- old scanlines? error

	- next set of scanlines?

		- block on tiles_available

		- update vars to make this new set the current set

	- in the current set of scanlines?

		- add to n_threads, a counter tracking the number of threads
		  running on this memory

		- return a pointer into the memory

- in release, decrement the n_threads counter, if it's zero, signal done on
  sem tiles_written

	VipsSemaphore tiles_written
	VipsSemaphore tiles_available
	VipsSemaphore frame_complete

	VipsThread add_chunked_frame

